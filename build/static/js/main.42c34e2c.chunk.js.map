{"version":3,"sources":["components/menu/menu.js","constants/configure.js","utils/apiCaller.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFound.js","components/productList/productList.js","components/productItem/productItem.js","actions/index.js","constants/ActionTypes.js","pages/ProductListPage/ProductListPage.js","pages/ProductActionPage/ProductActionPage.js","routers.js","App.js","serviceWorker.js","reducers/product.js","reducers/itemEditing.js","reducers/index.js","index.js"],"names":["Menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","index","path","children","active","match","className","Menu","showMenu","result","length","map","menu","key","this","Component","API_URL","callApi","endpoint","method","body","axios","url","config","data","catch","err","console","log","Home","props","onChange","event","target","value","type","checked","setState","state","onSignIn","e","preventDefault","txt_user","txt_password","then","res","price","history","push","alert","style","color","onSubmit","NotFound","ProductList","ProductItem","onDelete","id","confirm","product","statusName","status","statusClass","onClick","actFetchProducts","products","ProductListPage","DeleteProduct","findIndex","forEach","showProductItem","fetchAllProducts","connect","dispatch","actDeleteProductsApi","ProductActionPage","onSave","txtname","txtprice","txtcheck","onUpdateProducts","goBack","addProducts","params","onEditProducts","nextProps","itemEditing","actAddProductsApi","actGetProductsApi","actUpdateProductsApi","routes","main","App","showContentMenu","route","component","Boolean","window","location","hostname","initialState","action","splice","appReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.42c34e2c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Route,Link} from 'react-router-dom';\r\n\r\nconst Menus =[\r\n  {\r\n  name:'HomePage',\r\n  to:'/',\r\n  exact:true\r\n  },\r\n  {\r\n      name:'Product Management',\r\n      to:'/product-list',\r\n      exact:false\r\n  }\r\n\r\n\r\n];\r\n\r\n\r\nconst MenuLink = ({label,to, activeOnlyWhenExact, index})=>{\r\n  return (\r\n    <Route path ={to} exact={activeOnlyWhenExact} children={({match})=>{\r\n      var active = match ? \"active abc\":'';\r\n      return (\r\n        <li   className={`my-li ${active}`}>\r\n        <Link to ={to} className=\"link\" >{label}</Link>\r\n        \r\n        </li>\r\n      )\r\n    }}/>\r\n  )\r\n\r\n}\r\nclass Menu extends Component {\r\n  render(){\r\n  return (\r\n    <div className=\"Menu\">\r\n      \r\n      <div className=\"navbar navbar-default\">\r\n       <p className=\"navbar-brand\" >Call api</p>\r\n        <ul className=\"nav navbar-nav\">\r\n        {this.showMenu(Menus)}\r\n        </ul>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\nshowMenu=(Menus)=>{\r\n  var result = null;\r\n  if( Menus.length > 0){\r\nresult =  Menus.map((menu,index)=>{\r\n    return (\r\n     <MenuLink  label={menu.name} to={menu.to} activeOnlyWhenExact={menu.exact} key ={index}/>\r\n    );\r\n              });\r\n            }\r\n              return result ;\r\n}\r\n}\r\n\r\nexport default Menu;\r\n","export const API_URL ='https://5e7dad24fa19eb0016519e3d.mockapi.io/api';","import axios from 'axios';\r\nimport * as config from './../constants/configure';\r\nexport default  function callApi (endpoint,method = 'GET',body){\r\n    return  axios({\r\n        method: method,\r\n        url: `${config.API_URL}/${endpoint}`,\r\n        data: body\r\n\r\n      }).catch(err=>{\r\n  console.log(err);\r\n  \r\n      });\r\n};\r\n","import React,{Component} from 'react';\r\nimport callApi from './../../utils/apiCaller';\r\n\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      txt_user:'',\r\n      txt_password: ''\r\n    };\r\n  }\r\n  onChange=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.type ==='checkbox'? target.checked: target.value;\r\n  \r\n    this.setState({\r\n[name]: value\r\n    });\r\n    console.log(this.state);\r\n  }\r\n  onSignIn=(e)=>{\r\n    e.preventDefault();\r\n    \r\n    var{txt_user,txt_password}=this.state;\r\n    callApi('products/1','GET',null).then(res=>{\r\n      if( txt_user === res.data.name &&  txt_password === res.data.price){\r\n        this.props.history.push('/product-list');\r\n      }else{\r\n        alert(\"That's Wrong! Sign in again !\");\r\n      }\r\n      \r\n      \r\n\r\n    });\r\n  \r\n\r\n  }\r\n  render(){\r\n  \r\n  return (\r\n    <div className=\"Home container\">\r\n    <h1 style={{color:\"red\"}}> Đăng nhập thông tin </h1>  <br/>\r\n  \r\n    <form  onSubmit={this.onSignIn}>\r\n      <div className=\"form-group\">\r\n        <label>User</label>\r\n        <input type=\"text\" className=\"form-control\" name=\"txt_user\" onChange={this.onChange} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"text\" className=\"form-control\" name=\"txt_password\" onChange={this.onChange}/>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\">SIGN IN</button>\r\n    </form>\r\n    \r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React,{Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render(){\r\n  return (\r\n    <div className=\"NotFound container\">\r\n    <h1>NotFound</h1>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default NotFound;\r\n","import React,{Component} from 'react';\r\n\r\n\r\nclass ProductList extends Component {\r\n  render(){\r\n  return (\r\n    <div className=\"ProductList\">\r\n     \r\n          <div className=\"panel panel-primary\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">List Product</h3>\r\n              </div>\r\n              <div className=\"panel-body\">\r\n    \r\n    <table className=\"table table-bordered table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>STT</th>\r\n          <th>Mã  Sản Phẩm</th>\r\n          <th>Tên</th>\r\n          <th>Gía</th>\r\n          <th>Trạng Thái</th>\r\n          <th>Hạnh Động </th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.children}\r\n      </tbody>\r\n    </table>\r\n    \r\n              </div>\r\n          </div>\r\n          \r\n        </div>\r\n      \r\n      \r\n        \r\n  );\r\n}\r\n}\r\n\r\nexport default ProductList;\r\n","import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProductItem extends Component {\r\n\r\n  onDelete = (id)=>{\r\n  //  console.log(id)\r\n  if(confirm('Are You Sure?')){//eslint-disable-line\r\n    this.props.onDelete(id);\r\n  }\r\n}\r\n  render(){\r\n    var {product,index} = this.props;\r\n    var statusName = product.status ? 'Còn Hàng ':'Hết Hàng';\r\n    var statusClass = product.status ?'warning':'default';\r\n  return (\r\n\r\n\r\n        <tr>\r\n          <td>{index+1}</td>\r\n          <td>{product.id}</td>\r\n          <td>{product.name}</td>\r\n          <td>{product.price}</td>\r\n          <td>\r\n          <span className={`label label-${statusClass}`}>{statusName}</span>\r\n          </td>\r\n          <td>\r\n\r\n          <Link to ={`/product/${product.id}/edit`} className=\"btn btn-success\">Sửa</Link>\r\n          \r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={()=>this.onDelete(product.id)}>Xóa</button>\r\n          \r\n          </td>\r\n\r\n        </tr>\r\n     \r\n    \r\n      \r\n      \r\n        \r\n  );\r\n}\r\n}\r\n\r\nexport default ProductItem;\r\n","import * as types from './../constants/ActionTypes';\r\nimport callApi from './../utils/apiCaller';\r\n//action call api from server\r\nexport const actFetchProductsApi = ()=> {\r\n    return (dispatch) =>{\r\n        return callApi('products','GET',null).then(res=>{\r\n            dispatch(actFetchProducts(res.data))\r\n        });\r\n    };\r\n}\r\nexport const actFetchProducts = (products)=> {\r\n    return {\r\n        type: types.FETCH_PRODUCTS,\r\n        products: products\r\n    }\r\n}\r\n\r\nexport const actDeleteProducts = (products)=> {\r\n    return {\r\n        type: types.DELETE_PRODUCT,\r\n        products: products\r\n    }\r\n}\r\n\r\nexport const actDeleteProductsApi = (id)=> {\r\n    return (dispatch) =>{\r\n        return callApi(`products/${id}`,'DELETE',null).then(res=>{\r\n            dispatch(actDeleteProducts(res.data))\r\n        });\r\n    };\r\n}\r\n\r\nexport const actAddProducts = (products)=> {\r\n    return {\r\n        type: types.ADD_PRODUCT,\r\n        products: products\r\n    }\r\n}\r\n\r\nexport const actAddProductsApi = (product)=> {\r\n    return (dispatch) =>{\r\n        return callApi('products','POST',product).then(res=>{\r\n            dispatch(actAddProducts(res.data));\r\n            \r\n        });\r\n    }\r\n}\r\nexport const actUpdateProducts = (products)=> {\r\n    return {\r\n        type: types.UPDATE_PRODUCT,\r\n        products: products\r\n    }\r\n}\r\n\r\nexport const actUpdateProductsApi = (product)=> {\r\n    return (dispatch) =>{\r\n        return callApi(`products/${product.id}`,'PUT',product).then(res=>{\r\n            dispatch(actUpdateProducts(res.data));\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport const actGetProductsStore = (products)=> {\r\n    return {\r\n        type: types.EDIT_PRODUCT,\r\n        products: products\r\n    }\r\n}\r\nexport const actGetProductsApi = (id)=> {\r\n    return dispatch =>{\r\n        return callApi(`products/${id}`,'GET',null).then(res=>{\r\n            dispatch(actGetProductsStore(res.data));\r\n            \r\n        });\r\n    }\r\n}\r\n","export const FETCH_PRODUCTS='FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT ='ADD_PRODUCT';\r\nexport const UPDATE_PRODUCT='UPDATE_PRODUCT';\r\nexport const DELETE_PRODUCT='DELETE_PRODUCT';\r\nexport const EDIT_PRODUCT='EDIT_PRODUCT';\r\n","import React,{Component} from 'react';\r\nimport ProductList from './../../components/productList/productList';\r\nimport ProductItem from './../../components/productItem/productItem';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport{ actFetchProductsApi, actDeleteProductsApi}  from './../../actions/index';\r\nclass ProductListPage extends Component {\r\n  componentDidMount(){\r\n    //được gọi sau khi component render lần đầu tiên \r\n\r\n      this.props.fetchAllProducts();\r\n  }\r\n   componentDidUpdate(){\r\n     this.props.fetchAllProducts();\r\n  }\r\n  render(){\r\n    //var products=this.props.product;\r\n    var {products} =this.props;\r\n    \r\n   \r\n \r\n\r\n  return (\r\n\r\n    <div className=\"ProductList container\">\r\n    <div className=\"row\">\r\n    <Link to =\"/product/add\" className=\"btn btn-info mb-10\">Add Product</Link>\r\n      <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n      \r\n        <ProductList>\r\n        {this.showProductItem(products)}\r\n        </ProductList>\r\n</div>\r\n  \r\n    \r\n</div>\r\n      \r\n      \r\n    </div>\r\n  \r\n  );\r\n  \r\n}\r\nonDelete=(id)=>{\r\n//console.log(id);\r\n\r\n// var {products}=this.state;\r\n// callApi(`products/${id}`,'DELETE',null).then(res =>{\r\n//   if (res.status ===200){\r\n//     var index = this.findIndex (products,id);\r\n//     if(index!== -1){\r\n//       products.splice(index,1);\r\n//       this.setState({\r\n//         products:products\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   });\r\n\r\nthis.props.DeleteProduct(id);\r\n\r\n}\r\nfindIndex=(products,id)=>{\r\n  var result = -1;\r\n  products.forEach((product,index) => {\r\n    if(product.id ===id){\r\n      result = index;\r\n    }\r\n    \r\n  });\r\n  return result;\r\n}\r\nshowProductItem=(products)=>{\r\nvar result=null;\r\nif(products.length >0 ){\r\n  result = products.map((product,index)=>{\r\nreturn (<ProductItem key ={index} product={product}  index={index} onDelete ={()=>this.onDelete(product.id)}/>);\r\n\r\n  });\r\n}\r\nreturn result;\r\n}\r\n/*onAddProduct = ()=>{\r\n  console.log('abc');\r\nreturn(\r\n  <Route path='/add-product' exact ={true} component={ProductActionPage} />\r\n)\r\n\r\n}*/\r\n}\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    products : state.products\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch,props)=>{\r\n  return {\r\n    fetchAllProducts: ()=>{\r\n      dispatch(actFetchProductsApi());\r\n    },\r\n    DeleteProduct: (id)=>{\r\n      dispatch(actDeleteProductsApi(id));\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,mapDispatchToProps)(ProductListPage);\r\n","import React,{Component} from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {actAddProductsApi,actUpdateProductsApi,actGetProductsApi} from './../../actions/index';\r\nclass ProductActionPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      id :'',\r\n      txtname:'',\r\n      txtprice:'',\r\n      txtcheck: ''\r\n    };\r\n  }\r\n  onChange=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.type ==='checkbox'? target.checked: target.value;\r\n    this.setState({\r\n[name]: value\r\n    });\r\n  }\r\n  onSave=(e)=>{\r\ne.preventDefault();\r\nvar {id,txtname,txtprice,txtcheck}=this.state;\r\n//var id_match = this.props.match.params.id;\r\nvar {history} =this.props;\r\nvar product = {\r\n  id: id,\r\n  name: txtname,\r\n  price:txtprice,\r\n  status:txtcheck\r\n};\r\nif (id){// trường hợp update\r\n// callApi(`products/${id_match}`,'PUT',\r\n// {\r\n//   name:txtname,\r\n//   price:txtprice,\r\n//   status:txtcheck\r\n// }).then(res=>{\r\n// history.goBack();\r\n// });\r\nthis.props.onUpdateProducts(product);\r\nhistory.goBack();\r\n\r\n\r\n// this.props.updateProduct(id_match,product);\r\n// history.goBack();\r\n\r\n}else{ //trường hợp add \r\n  // callApi('products', 'POST',\r\n  // {\r\n  //   name:txtname,\r\n  //   price:txtprice,\r\n  //   status:txtcheck\r\n  // }).then(res=>{\r\n  //   history.push('/product-list');\r\n  \r\n  // });\r\n  \r\n  /*axios.post('https://5e7dad24fa19eb0016519e3d.mockapi.io/api/products', {\r\n    name:txtname,\r\n    price:txtprice,\r\n    status:txtcheck\r\n  })\r\n  .then(function (response) {\r\n    console.log(response);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });*/\r\n\r\n  this.props.addProducts(product);\r\n  history.push('/product-list');\r\n}\r\n\r\n  }\r\n  componentDidMount(){\r\n    var {match}= this.props;\r\nif (match){\r\n   var id = match.params.id;\r\n   this.props.onEditProducts(id);\r\n//   callApi(`products/${id}`,'GET',null).then(res=>{\r\n//  this.setState({\r\n//    txtname: res.data.name,\r\n//    txtprice: res.data.price,\r\n//    txtcheck: res.data.status\r\n//  });\r\n//    });\r\n  }\r\n  }\r\n  UNSAFE_componentWillReceiveProps (nextProps){\r\n    //var {id,txtname,txtprice,txtcheck}=this.props.itemEditing;\r\n    if(nextProps && nextProps.itemEditing){\r\nvar{itemEditing}=nextProps;\r\nthis.setState({\r\n      \r\n  id: itemEditing.id,\r\n  txtname: itemEditing.name,\r\n  txtprice:itemEditing.price,\r\n  txtcheck:itemEditing.status\r\n\r\n});\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    var {txtname,txtprice,txtcheck}=this.state;\r\n    \r\n    \r\n  return (\r\n    <div className=\"ProductActionPage container\">\r\n\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n           \r\n           <form  onSubmit={this.onSave}>\r\n                <div className=\"form-group\">\r\n\r\n         \r\n                    <label>Product Name </label>\r\n                    \r\n                      <input type=\"text\" className=\"form-control\" name = \"txtname\"  onChange={this.onChange} value={txtname}/>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n         \r\n                      <label>Price </label>\r\n                      \r\n                        <input type=\"number\" className=\"form-control\" name =\"txtprice\" onChange={this.onChange} value={txtprice} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n         \r\n                        <label>Status </label>\r\n                  \r\n                          </div>\r\n\r\n                          <div className=\"checkbox\">\r\n                        <label>\r\n                          <input type=\"checkbox\" name =\"txtcheck\" onChange={this.onChange} value={txtcheck} checked ={txtcheck}/>\r\n                          Còn Hàng</label>\r\n                          </div>\r\n\r\n                  <span>  <button type=\"submit\" className=\"btn btn-primary\">SAVE</button> &nbsp;\r\n                    <Link  to =\"/product-list\" className=\"btn btn-danger\">CANCEL</Link> \r\n                    </span>\r\n           </form>\r\n           \r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n  \r\n}\r\n\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    itemEditing : state.itemEditing\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n  return{\r\n    addProducts:(product)=>{\r\n      dispatch(actAddProductsApi(product));\r\n    },\r\n    onEditProducts: (id)=>{\r\n      dispatch(actGetProductsApi(id));\r\n    },\r\n    onUpdateProducts : (product)=>{\r\n      dispatch(actUpdateProductsApi(product));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductActionPage);\r\n","import React from 'react';\r\n//cấu hình với route tương ứng sẽ load component tương ứng \r\nimport Home from './pages/HomePage/HomePage';\r\nimport NotFound from './pages/NotFoundPage/NotFound';\r\nimport ProductListPage from './pages/ProductListPage/ProductListPage';\r\nimport ProductActionPage from './pages/ProductActionPage/ProductActionPage';\r\n\r\n\r\nconst routes = [\r\n{\r\n    path:'/',\r\n    exact:true,\r\n    main:({history})=><Home history={history} />\r\n},\r\n\r\n{\r\n    path:'/product-list',\r\n    exact:false,\r\n    main: ()=>< ProductListPage/>\r\n},\r\n{\r\n    path:'/product/add',\r\n    exact:false,\r\n    main: ({history}) =><ProductActionPage history={history} />\r\n},\r\n{\r\n    path:'/product/:id/edit',\r\n    exact:false,\r\n    main: ({match,history}) =><ProductActionPage match={match} history={history} />\r\n},\r\n\r\n{\r\n    path:'',\r\n    exact:false,\r\n    main: ()=>< NotFound/>\r\n}\r\n\r\n];\r\nexport default routes;","import React,{Component} from 'react';\nimport './App.css';\nimport Menu from './components/menu/menu';\nimport routes from './routers';\nimport { Switch,Route, BrowserRouter as Router } from 'react-router-dom';\n\n\n\n\nclass App extends Component {\n  render(){\n    \n  return (\n    <Router>\n    <div className=\"App\">\n      \n    <Menu/>\n      \n      <div className=\"container\">\n      \n        {/*<div className=\"row\">\n        <button type=\"button\" className=\"btn btn-info mb-10 \">Add Product</button>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          \n            <ProductList/>\n  </div>\n      \n        \n  </div>*/\n}\n\n  {this.showContentMenu(routes)}\n      \n      \n    </div>\n    </div>\n    </Router>\n  );\n\n}\nshowContentMenu=(routes)=>{\n  var result = null;\n  if (routes.length > 0 ){\n    result = routes.map((route,index)=>{\nreturn <Route\nkey={index} path={route.path} exact={route.exact} component = {route.main}\n/>\n\n    });\n  }\n\n  return <Switch>\n  {result}\n  </Switch>\n\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import  * as types from './../constants/ActionTypes';\r\nvar initialState = [];\r\nfunction findIndex (products,id){\r\n    var result = -1;\r\n    \r\n      if(products.id === id){\r\n        result = id ;\r\n      }\r\n \r\n    return result;\r\n  }\r\nconst products = (state = initialState, action)=>{\r\n    var {id, products} = action;\r\n    switch(action.type){\r\n        case types.FETCH_PRODUCTS:\r\n            \r\n            state = action.products;\r\n           // console.log(state);\r\n            return [...state];\r\n            case types.DELETE_PRODUCT:\r\n                var index = findIndex (state,id);\r\n                    if(index!== -1){\r\n                        state.splice(index,1);\r\n                    }\r\n                    return [...state];\r\n            case types.ADD_PRODUCT:\r\n                    state.push(action.products);\r\n                return [...state];\r\n            case types.UPDATE_PRODUCT:\r\n                index = findIndex(state,products.id);\r\n                state[index] = products;\r\n\r\n                return [...state];\r\n\r\n\r\n        default:  return [...state];\r\n    }\r\n};\r\nexport default products;","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {};\r\nconst itemEditing =(state = initialState, action)=>{\r\n    switch(action.type){\r\n        case types.EDIT_PRODUCT:\r\n            return action.products;\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default itemEditing;","import {combineReducers} from 'redux';\r\nimport products from './product';\r\nimport itemEditing from './itemEditing';\r\n\r\nconst appReducer = combineReducers({\r\nproducts,\r\nitemEditing\r\n});\r\n\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,compose, applyMiddleware}  from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  appReducer, \n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nReactDOM.render(\n  <Provider store = {store}>\n  <App />\n  \n  </Provider>,\n \n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}